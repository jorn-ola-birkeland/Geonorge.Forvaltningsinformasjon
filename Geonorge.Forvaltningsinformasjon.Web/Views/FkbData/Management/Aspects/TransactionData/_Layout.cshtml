@using Microsoft.AspNetCore.Mvc.Localization
@using Newtonsoft.Json

@inject IViewLocalizer Localizer
@inject ApplicationSettings AppSettings

@model Geonorge.Forvaltningsinformasjon.Web.Models.FkbData.Management.Aspects.TransactionData.TransactionDataViewModel

@{
    Layout = "../_Layout.cshtml";
    ViewData["currentTab"] = "TransactionData";
}

@section titleSection
{
    @RenderSection("titleSection")
}

@section aspectsSection
{
    <style>
        input {
            visibility: hidden;
            width: 0px;
        }

            input:checked + span {
                font-weight: bold;
            }

            input + span {
                font-weight: normal;
            }
    </style>

    <div class="col-md-4" id="r_map" style="top:43px"></div>
    <div class="col-md-8">
        <table class="table">
            <thead>
                <tr id="PeriodHeader">
                    <th></th>
                    <th>
                        <label style="cursor:pointer">
                            <input type="radio" name="period" onclick="setPeriod(0)" />
                            <span>@Localizer["Siste 7 dager"]</span>
                        </label>
                    </th>
                    <th>
                        <label style="cursor:pointer">
                            <input type="radio" name="period" onclick="setPeriod(1)" checked="checked" />
                            <span>@Localizer["Siste 30 dager"]</span>
                        </label>
                    </th>
                    <th>
                        <label style="cursor:pointer">
                            <input type="radio" name="period" onclick="setPeriod(2)" />
                            <span>@Localizer["Siste 365 dager"]</span>
                        </label>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transactionData in Model.TransactionData)
                {
                    <tr>
                        <td>
                            <label style="cursor:pointer">
                                <svg width="20" height="20">
                                    <rect width="20" height="20" style="fill:@Model.LayerStyles[transactionData.DataSetName].FillColor;fill-opacity:@Model.LayerStyles[transactionData.DataSetName].FillOpacity;stroke-width:@Model.LayerStyles[transactionData.DataSetName].StrokeWidth;stroke:@Model.LayerStyles[transactionData.DataSetName].StrokeColor" />
                                </svg>
                                @if (transactionData.DataSetName != "FKB-Bygning")
                                {
                                    <input type="checkbox" onclick="toggleDataSet('@transactionData.DataSetName', this)" style="margin:0px"/>
                                }
                                else
                                {
                                    <input type="checkbox" onclick="toggleDataSet('@transactionData.DataSetName', this)" checked="checked" style="margin:0px"/>
                                }
                                <span style="vertical-align:top">@transactionData.DataSetName</span>
                            </label>
                        </td>
                        <td>@transactionData.SumLastWeek</td>
                        <td>@transactionData.SumLastMonth</td>
                        <td>@transactionData.SumLastYear</td>
                    </tr>
                }
                <tr>
                    <td>@Localizer["Totalt"]</td>
                    <td>@Model.SumLastWeek</td>
                    <td>@Model.SumLastMonth</td>
                    <td>@Model.SumLastYear</td>
                </tr>
            </tbody>
        </table>
    </div>

    <script src="~/dist/js/jquery/jquery.min.js"></script>
    <script type="text/javascript">
        var period = 1;
        var dataSetNames = ["FKB-Bygning"];
        window.onload = updateMap();

        function toggleDataSet(dataSetName) {
            const idx = dataSetNames.findIndex(e => e === dataSetName);

            if (idx > -1) {
                dataSetNames.splice(idx, 1);
            } else {
                dataSetNames.splice(idx, 0, dataSetName);
            }
            updateMap();
        }

        function setPeriod(p) {
            period = p;
            updateMap();
        }

        function updateMap() {
            const mapModel = encodeURIComponent('@Html.Raw(JsonConvert.SerializeObject(Model.MapViewModel))');
            console.log(mapModel);
            $('#r_map').load('/fkb-data/management/transaction-data/update-map?dataSetNames=' + dataSetNames.toString() + '&period=' + period + '&jsonMapViewModel=' + mapModel);
        }
    </script>
}